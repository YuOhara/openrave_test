<launch>
  <arg name="INPUT" default="/camera/depth/image_rect" />
  <arg name="INFO" default="/camera/depth/camera_info" />
  <arg name="POINTS" default="/camera/depth/points" />
  <node pkg="jsk_pcl_ros" type="kinfu" name="kinfu" output="screen">
    <remap from="~input/depth" to="$(arg INPUT)" />
    <remap from="~input/color" to="$(arg INPUT)" />
    <remap from="~input/info" to="$(arg INFO)" />
    <rosparam>
      tsdf_trunc_dist: 0.03
      icp_dist_trans: 0.1
      icp_dist_rot: 20
      camera_movement_thre: 0.001
      <!-- child_frame_id: /left_camera_optical_frame -->
      child_frame_id: /camera_depth_optical_frame
    </rosparam>
  </node>
  <!-- <include file="$(find jsk_pcl_ros)/launch/laser_multi_plane_segmentation.launch" > -->
  <!--   <arg name="INPUT" value="/kinfu/output/cloud" /> -->
  <!--   <arg name="LASER_FLAME_ID" default="/camera_depth_optical_frame" /> -->
  <!-- </include> -->
  <include file="$(find jsk_pcl_ros)/launch/organized_multi_plane_segmentation.launch">
    <arg name="INPUT" value="$(arg POINTS)" />
  </include>
  <node pkg="openrave_test" type="grasp_finder_with_rrt_node.py" name="grasp_finder_right" output="screen" respawn="true">
    <param name="~left_hand" value="false" />
  </node>
  <node pkg="openrave_test" type="grasp_finder_with_rrt_node.py" name="grasp_finder_left" output="screen" respawn="true">
    <param name="~left_hand" value="true" />
  </node>
  <node pkg="image_view" type="image_saver" name="save_image_for_moseg" respawn="true" output="screen">
    <remap from="image" to="/camera_remote/rgb/image_rect_color"/>
    <param name="~save_all_image" value="false" />
  </node>
  <node pkg="openrave_test" type="second_grasp_finder" name="second_grasp_finder" output="screen" >
    <remap from="camera_info" to="/camera/rgb/camera_info" />
  </node>
  <node pkg="openrave_test" type="triger_base_map.py" name="triger_base_map" output="screen">
  </node>
</launch>
